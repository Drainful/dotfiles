#+TITLE: Next Browser Configuration
#+CREATOR: Adrian Fullmer
#+PROPERTY: header-args :tangle init.lisp

* Keybindings
Definition of a keymap for personal bindings.
#+BEGIN_SRC lisp :noweb tangle
  <<utilities>>

  (in-package :nyxt-user)

  (defvar *my-keymap* (make-keymap "My keymap"))

  (defmacro keys (&body bindings)
    `(define-key *my-keymap*
         ,@bindings))

  (keys
   "y y" 'nyxt/web-mode:copy 
   "p" 'nyxt/web-mode:paste 
   "b" 'switch-buffer
   "s-TAB" 'switch-buffer-previous
   "b" 'switch-buffer
   ", w" 'delete-current-buffer)
#+END_SRC
* Emacs Integration
** Evaluate in Emacs
#+BEGIN_SRC lisp
  (in-package :nyxt-user)

  (defun eval-in-emacs (&rest s-exps)
    "Evaluate S-exps with `emacsclient'."
    (let ((s-exps-string
           (write-to-string
            `(progn ,@s-exps) :case :downcase)))
      (log:debug "Sending to Emacs: ~a" s-exps-string)
      (ignore-errors (uiop:run-program
                      (list "emacsclient" "--eval" s-exps-string)))))

#+END_SRC
** COMMENT Edit in Emacs
#+BEGIN_SRC lisp
(defun edit-str-with-emacs (str tempfile)
       "Dump the contents of str to the temporary file tempfile, then open tempfile
in Emacs for editing. Note that this call is synchronous!"
       ;; Dump the cell's contents to a tempfile
       (with-open-file (s tempfile :direction :output :if-exists :supersede)
         ;; Replace \n with literal newlines
         (format s "~a" str))
       ;; Open an emacs buffer pointed at the file
       (uiop:run-program `("emacsclient" ,tempfile) :output :string)
       ;; Read the file contents back in
       (with-open-file (s tempfile :direction :input)
         (let ((contents (make-string (file-length s))))
           (read-sequence contents s)
           contents)))
#+END_SRC
* External Programs
** Mpv
#+BEGIN_SRC lisp
  (in-package :nyxt-user)

  (define-command play-video-in-current-page (&optional (buffer (current-buffer)))
    "Play video in the currently open buffer."
    (uiop:run-program (list "mpv" (url buffer))))

  (keys
   ", m" 'play-video-in-current-page)
#+END_SRC
* Modes
#+BEGIN_SRC lisp
  (in-package :nyxt-user)

  (define-mode my-mode ()
    "Dummy mode for the custom key bindings in `*my-keymap*'."
    ((keymap-scheme :initform (keymap:make-scheme
                               scheme:cua *my-keymap*
                               scheme:emacs *my-keymap*
                               scheme:vi-normal *my-keymap*))))
#+END_SRC
* Configuration
** Buffer
#+BEGIN_SRC lisp
  (in-package :nyxt-user)

  (define-configuration buffer
      ((default-modes (append '(my-mode vi-normal-mode) %slot-default))))
#+END_SRC
* COMMENT Start Swank
#+BEGIN_SRC lisp
  (start-swank)
#+END_SRC
* COMMENT Utilities
#+BEGIN_SRC lisp :noweb-ref utilities :tangle no
(defmacro aif (test then &optional else)
  (let ((it test)) (if it then else)))
#+END_SRC
